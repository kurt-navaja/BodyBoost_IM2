# Generated by Django 5.1.1 on 2024-12-03 15:04

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("first_name", models.CharField(blank=True, max_length=30)),
                ("last_name", models.CharField(blank=True, max_length=30)),
                ("weight", models.FloatField(blank=True, null=True)),
                ("height", models.FloatField(blank=True, null=True)),
                ("age", models.IntegerField(blank=True, null=True)),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True,
                        default="static/images/profile_photo.png",
                        null=True,
                        upload_to="profile_photos/",
                    ),
                ),
                ("country", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("street", models.CharField(blank=True, max_length=200)),
                ("zip_code", models.CharField(blank=True, max_length=20)),
                (
                    "intensity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0.3", "Gentle (0.3kg / week)"),
                            ("0.6", "Light (0.6kg / week)"),
                            ("0.7", "Moderate (0.75kg / week)"),
                            ("0.8", "Aggressive (1kg / week)"),
                            ("0.9", "High Intensity (1.25kg / week)"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "body_goal",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("victoria-secret-thin", "Victoria-Secret Thin"),
                            ("slim", "Slim"),
                            ("muscular", "Muscular"),
                            ("athletic", "Athletic"),
                            ("sumo-wrestler", "Sumo Wrestler"),
                        ],
                        max_length=30,
                    ),
                ),
                ("receive_emails", models.BooleanField(default=False)),
                ("agree_to_terms", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="custom_user_set",
                        related_query_name="custom_user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="custom_user_set",
                        related_query_name="custom_user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
